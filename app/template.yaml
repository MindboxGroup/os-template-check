apiVersion: v1
kind: Template
metadata:
  name: our_application
objects:

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: app_name
      stack: stack_name
    name: app_name
  spec:
    replicas: ${{APP_NAME_REPLICAS}}
    selector:
      app: app_name
      deploymentconfig: app_name
      stack: stack_name
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: app_name
          deploymentconfig: app_name
          stack: stack_name
      spec:
        containers:
        - image: ${APP_NAME_IMAGE}
          imagePullPolicy: IfNotPresent
          name: app_name
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthcheck
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthcheck
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: "0.5G"
              cpu: "0.2"
            limits:
              memory: "0.5G"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: app_name
      stack: stack_name
    name: app_name
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: app_name
      deploymentconfig: app_name
      stack: stack_name
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: app_name
      area: area_name
      stack: stack_name
    name: app
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: app_name
      weight: 100
    wildcardPolicy: None


parameters:
  - name: PROJECT
    description: "Name of this project"

  - name: APP_NAME_REPLICAS
    description: "Replica count for app-name"
    value: "1"

 
  - name: APP_NAME_IMAGE
    description: "Container image for app-name"
    value: registry.com/my_image:tag
